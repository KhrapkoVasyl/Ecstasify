name: Server CI

on:
  push:
    paths:
      - 'server/**'
  pull_request:
    paths:
      - 'server/**'

jobs:
  build-lint-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        run: npm ci

      - name: Format and lint
        run: npm run format-and-lint

      - name: Run tests
        run: npm run test

      - name: Print current working directory
        run: echo $GITHUB_WORKSPACE

      - name: List files in current directory
        run: ls $GITHUB_WORKSPACE

      - name: Build
        if: ${{ github.ref == 'refs/heads/chore/#7/setting-up-ci-for-server-deploy' }}
        run: npm run build

      - name: Zip all files for upload between jobs
        if: ${{ github.ref == 'refs/heads/chore/#7/setting-up-ci-for-server-deploy' }}
        run: zip --symlinks -r nest.zip ./*

      - name: Upload artifact for deployment job
        if: ${{ github.ref == 'refs/heads/chore/#7/setting-up-ci-for-server-deploy' }}
        uses: actions/upload-artifact@v3
        with:
          name: node-app
          path: nest.zip

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build-lint-and-test
    defaults:
      run:
        working-directory: ./server
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    if: ${{ github.ref == 'refs/heads/chore/#7/setting-up-ci-for-server-deploy' }}

    steps:
      - name: Print current working directory
        run: echo $GITHUB_WORKSPACE

      - name: List files in current directory
        run: ls $GITHUB_WORKSPACE

      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: node-app
          path: nest.zip

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'ecstasify-api'
          slot-name: 'production'
          publish-profile: ${{secrets.ECSTASIFY_API_PUBLISH_PROFILE}}
          package: nest.zip

      - name: Delete zip file
        run: rm nest.zip
